#!/bin/bash

set -e
set -o pipefail
set -E

if [ "$DEBUG" = "true" ]; then
  set -x
fi

echo "$(date +%x\ %H:%M:%S) [START] Rolling upgrade"

# Import basic functions
source lib/helpers.sh
source lib/init.sh

# Sync the terrafrom state
echo "$(date +%x\ %H:%M:%S) [START] Check that current status is consistent"
QUANTITY_CURRENT=$(get_current_quantity)
export QUANTITY_CURRENT
source lib/sync.sh
echo "$(date +%x\ %H:%M:%S) [END] Check that current status is consistent"

# Test that the upgrade works on a new node
echo "$(date +%x\ %H:%M:%S) [START] Test that the upgrade works on a new node"
QUANTITY_CURRENT=$(echo "$(get_current_quantity) + 1" | bc)
export QUANTITY_CURRENT
source lib/sync.sh
echo "$(date +%x\ %H:%M:%S) [END] Test that the upgrade works on a new node"

# Wait until all the cluster status is fine
echo "$(date +%x\ %H:%M:%S) [START] Wait until all the cluster status is fine"
QUANTITY_TAINT=$(echo "${QUANTITY_CURRENT} - 1" | bc)
for n in $(seq 1 $QUANTITY_TAINT); do
  NUMBER=$(echo "$n - 1" | bc)
  wait_health_ok $IDENTITY-$NUMBER 2
done
echo "$(date +%x\ %H:%M:%S) [END] Wait until all the cluster status is fine"

# Recreate all nodes sequentially
QUANTITY_TAINT=$(echo "${QUANTITY_CURRENT} - 1" | bc)
for n in $(seq 1 $QUANTITY_TAINT); do
  NUMBER=$(echo "$n - 1" | bc)
  taint_node $NUMBER

  # Recreate tainted instance $NUMBER
  source lib/sync.sh
done

# Decrease number to the orginal number
echo "$(date +%x\ %H:%M:%S) [START] Decrease quantity to the orginal number $QUANTITY_CURRENT"
QUANTITY_CURRENT=$(echo "${QUANTITY_CURRENT} - 1" | bc)
export QUANTITY_CURRENT
source lib/sync.sh
echo "$(date +%x\ %H:%M:%S) [END] Decrease quantity to the orginal number $QUANTITY_CURRENT"

echo "$(date +%x\ %H:%M:%S) [END] Rolling upgrade"
